
@{
    ViewBag.Title = "Projects";
    Layout = "~/Views/Shared/_Layout.cshtml";

    @*<h2 id="title">@ViewBag.Title.</h2>
    <h3></h3>

    <address>
        One Microsoft Way<br />
        Redmond, WA 98052-6399<br />
        <abbr title="Phone">P:</abbr>
        425.555.0100
    </address>

    <address>
        <strong>Support:</strong>   <a href="mailto:Support@example.com">Support@example.com</a><br />
        <strong>Marketing:</strong> <a href="mailto:Marketing@example.com">Marketing@example.com</a>
    </address>*@
}

<main aria-labelledby="title">
    <br />
    <h2 id="title"> 📁📂  @ViewBag.Title.</h2>
    <br />

    <div class="card p-4 edu-card">
        <h3>
            Student Managment System
        </h3>
        <p> Web Technologies</p>
        <p class="">
            📌 The Student Management System is a robust web-based application developed using the MVC (Model-View-Controller) architecture,
            ensuring a clean separation of concerns for maintainability and scalability. The frontend is crafted with HTML, CSS, and JavaScript,
            delivering a responsive and user-friendly interface, while the backend is powered by PHP, handling core business logic and server-side
            operations. The system supports secure login and registration with input sanitization, password hashing, and session-based
            authentication to protect user data and prevent unauthorized access. Role-based access control is implemented to distinguish
            permissions between students, administrators, and faculty, ensuring each user interacts with the system according to their assigned
            role. Session management ensures users remain authenticated securely throughout their activities. Data persistence and integrity are
            maintained through a MySQL database, with foreign key constraints, transactional support, and validation checks across all
            modules—such as course enrollment, grade management, and payment processing. Additional features include dynamic course registration,
            real-time fee calculations, profile picture upload, and error-handling mechanisms that enhance reliability. The entire system is
            designed with a focus on security, usability, and scalability,
            making it suitable for academic institutions seeking a complete digital solution for student lifecycle management.
        </p>
        <p class="border-1">Semester : Spring 24-25</p>
        <strong>GitHub Repository:</strong>   <a href="https://github.com/EMP3R0RR/Student_Management_System">📁➡️ </a>
        <br />
    </div>

    <div class="card p-4 edu-card">
        <h3>
            Dream Properties
        </h3>
        <p>Object Oriented Programming 2</p>
        <p class=" ">
            📌 Dream Properties is a desktop real estate management application developed using C# and Windows Forms,
            designed to simplify property listings, client handling, and transaction tracking. Gained hands-on experience with the .NET Framework,
            including the basics of the C# language, and developed user interfaces for Console, Windows Forms, and WPF applications.
            Worked with .NET assemblies and components, learning how to create, configure, and manage them effectively.
            Developed skills in data consumption and manipulation, as well as in testing, debugging, and deploying .NET projects.
            Additionally, acquired practical knowledge in maintaining, supporting, configuring, and securing .NET applications.
            Successfully prepared, developed, and presented a group project using .NET Solution Architectures,
            demonstrating a full-cycle application development process within a team environment.
        </p>
        <p class="border-1">Semester : Spring 23-24</p>
        <strong>GitHub Repository:</strong>   <a href="https://github.com/EMP3R0RR/Dream-Properties">📁➡️</a>
        <br />
    </div>
          
    <div class="card p-4 edu-card">
        <h3>
            Weather Application
        </h3>
        <p> Personal Project</p>
        <p class="">
            📌 WeatherApp is a responsive and interactive web-based weather application developed using HTML, CSS, and JavaScript,
            designed to fetch and display real-time weather data using the OpenWeatherMap API. The application allows users to enter any city name
            and retrieve current weather conditions, including temperature, humidity, wind speed, and a dynamic weather icon that visually
            represents the forecast (e.g., rain, clouds, snow). The app features form validation, providing error messages for invalid city
            names and ensures a user-friendly experience through a clean UI. With asynchronous data handling using the fetch() API and intuitive JavaScript DOM manipulation,
            WeatherApp demonstrates effective use of third-party APIs and frontend development best practices for a real-world utility application.
        </p>
        <p class="border-1">May 24- June 24</p>
        <strong>GitHub Repository:</strong>   <a href="https://github.com/EMP3R0RR/WeatherAppAPI">📁➡️</a>

        <br />
    </div>

    




</main>

